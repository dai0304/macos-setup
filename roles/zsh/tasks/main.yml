---
# file: roles/zsh/tasks/main.yml

- name: Install zsh
  homebrew: name={{ item }}
  with_items:
    - zsh
    - zsh-completions

- name: Search path of zsh
  command: which zsh
  register: which_zsh
  ignore_errors: True

- debug: msg="{{ which_zsh.stdout }}"

#
# login shell settings, you will be ased user's password when system switches to zsh.
#

- name: Grep shells
  shell: >
    grep "^{{ which_zsh.stdout }}$" /etc/shells
  register: grep_shells 
  ignore_errors: True

- debug: msg="{{ grep_shells }}"
  when: grep_shells.rc == 0

- name: Append shells
  shell: >
    echo {{ which_zsh.stdout }} >> /etc/shells
  become: true
  when: grep_shells.rc != 0


- name: Check current login shell
  shell: dscl . read ~ UserShell | awk '{print $2}'
  register: osx_login_shell_current_login_shell
  changed_when: false

- name: Change login shell
  shell: >
    chpass -s {{ which_zsh.stdout }}
  when: osx_login_shell_current_login_shell.stdout != osx_login_shell_shell
  register: result
  until: result.rc == 0
  retries: 3

#
# install antigen and prezto
#

- name: Install antigen
  homebrew: name=antigen

- name: Install prezto through antigen
  shell: >
    source $(brew --prefix)/share/antigen/antigen.zsh && antigen bundle sorin-ionescu/prezto
    executable={{which_zsh.stdout}}
#   ignore_errors: True

- name: Create symlink for prezto
  file:
    src: "{{ ansible_user_dir }}/.antigen/bundles/sorin-ionescu/prezto"
    dest: "{{ ansible_user_dir }}/.zprezto"
    state: link

- name: Apply prezto setting
  shell: >
    setopt EXTENDED_GLOB; for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do; ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"; done;
    executable={{ which_zsh.stdout }}
  ignore_errors: True

- name: Get path of original preztorc 
  command: readlink {{ ansible_user_dir }}/.zpreztorc
  register: zpreztorc_path

- name: Deploy preztorc_template
  template: src=zpreztorc.j2 dest={{ zpreztorc_path.stdout }} force=True

#
# install zshrc
#

- name: Ensure {{ ansible_user_dir }}/.zsh.d directory exists
  file:
    path: "{{ ansible_user_dir }}/.zsh.d"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: staff
    mode: 0700

- name: Update zshrc for {{ ansible_user_dir }}/.zsh.d
  lineinfile:
    dest: "{{ ansible_user_dir }}/.zshrc"
    line: for file in ~/.zsh.d/*; do source "$file"; done

- name: Deploy {{ ansible_user_dir }}/zsh.d
  template:
    src: "{{ item }}.j2"
    dest: "{{ ansible_user_dir }}/.zsh.d/{{ item }}"
    force: True
  with_items:
    - zsh
    - env
    - terminal
    - prompt
    - homebrew
    - antigen
    - anyenv
    - aliases
    - java

