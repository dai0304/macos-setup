[user]
  name = Daisuke Miyamoto
  email = dai.0304@gmail.com
  signingkey = 8843A086A99C8EBA
[color]
  # colorの設定 (以下のコマンドは自動で色つける)
  ui = auto
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[push]
  default = tracking       # defaultのpush先はtrackingしているリポジトリ
[pull]
  rebase = true
[core]
  autocrlf = input                 # CRLFを自動変換
  whitespace = cr-at-eol
  editor = vi -c \"set fenc=utf-8\"
	pager = less -r
[alias]
  st = status
  now = now --all --stat
  sh = show
  so = remote show origin
  ft = fetch
  up = pull --rebase       # pull rebase
  rbd = rebase develop     # developへのrebaseはよく使うのでalias
  ad = add
  ci = commit -a           # modifiedなファイルを全てstageへ
  cam = commit -a --amend  # 直前のcommitを修正
  co = checkout
  cb = checkout -b         # branch切ってcheckoutする
  cd = checkout develop
  # branch関連
  br = branch
  ba = branch -a           # originも含めた全てのbranchを表示
  bm = branch --merged     # merge済みのbranchを表示
  bn = branch --no-merged  # mergeしてないbranchを表示
  bo = branch -r           # remote branchを表示
  # log関連
  wc = whatchanged         # logに変更されたファイルも一緒に出す
  ls = log --stat          # logに変更されたファイルも一緒に出す
  lp = log -p              # diffも一緒に出す
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
  lr = log origin          # originのlog
  lg  = log --graph --decorate=full --pretty=format:'%C(auto)%ad %h %s %C(bold blue)<%an>%C(reset)%C(auto)%d%C(reset)' --date=short
  lga = log --graph --decorate=full --pretty=format:'%C(auto)%ad %h %s %C(bold blue)<%an>%C(reset)%C(auto)%d%C(reset)' --date=short --all
  ranking = shortlog -s -n --no-merges
  # diff関連
  di = diff
  dm = diff master           # masterとのdiff
  dd = diff develop          # developとのdiff
  dw = diff --color-words    # 単語単位でいろつけてdiff
  dc = diff --cached         # addされているものとのdiff
  ds = diff --staged         # 同上(1.6.1以降)
  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff
  # grep
  gr = grep
  gn = grep -n
  # submodule
  sm = submodule
  smupdate = submodule foreach "git checkout master; git pull origin master"
  # mergeの際にconflictが起きたファイルを編集
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # mergeの際にconflictが起きたファイルをadd
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  # see http://d.hatena.ne.jp/thinca/20130925/1380099336
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[a-z]"
  # hub
	see = browse
  pr = pull-request
[i18n]
  commitencoding = utf-8
[merge]
  ff = false
[color "diff"]
	whitespace = red reverse
